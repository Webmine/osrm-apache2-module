#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#

.DEFAULT_GOAL := release
WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = -Iinclude -Iosrm-backend/include -Iosrm-backend/third_party
CFLAGS = -Wall -std=c++11
RESINC =
LIBDIR =
LIB = -losrm -lpthread -lboost_system -lboost_filesystem -lboost_thread -lrt -ltbb
LDFLAGS =
INSTALL_DIR_BIN = /usr/bin
INSTALL_DIR_SCRIPTS = /usr/sbin
INSTALL_DIR_CONF = /etc/osrmd
INSTALL_DIR_LOG = /var/log/osrmd

MAKE_PID := $(shell echo $$PPID)
JOB_FLAG := $(filter -j%, $(subst -j ,-j,$(shell ps T | grep "^\s*$(MAKE_PID).*$(MAKE)")))

OSRM_OUT_DIR_RELEASE = osrm-backend/build/release
INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS)
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB) -L$(OSRM_OUT_DIR_RELEASE)
LDFLAGS_RELEASE = $(LDFLAGS)
OBJDIR_RELEASE = .objs
DEP_RELEASE =
OUT_RELEASE = bin/release/osrmd

OSRM_OUT_DIR_DEBUG = osrm-backend/build/debug
INC_DEBUG = $(INC)
CFLAGS_DEBUG = $(CFLAGS) -g
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR)
LIB_DEBUG = $(LIB) -L$(OSRM_OUT_DIR_DEBUG)
LDFLAGS_DEBUG = $(LDFLAGS)
OBJDIR_DEBUG = .objs
DEP_DEBUG =
OUT_DEBUG = bin/debug/osrmd

OBJ_RELEASE = $(OBJDIR_RELEASE)/src/WorkerQueue.o $(OBJDIR_RELEASE)/src/ini-reader/INIReader.o $(OBJDIR_RELEASE)/src/ini-reader/ini.o $(OBJDIR_RELEASE)/src/logger/log.o $(OBJDIR_RELEASE)/src/osrmd.o $(OBJDIR_RELEASE)/src/socket/Server.o $(OBJDIR_RELEASE)/src/socket/UnixServer.o

OBJ_DEBUG = $(OBJDIR_DEBUG)/src/WorkerQueue.o $(OBJDIR_DEBUG)/src/ini-reader/INIReader.o $(OBJDIR_DEBUG)/src/ini-reader/ini.o $(OBJDIR_DEBUG)/src/logger/log.o $(OBJDIR_DEBUG)/src/osrmd.o $(OBJDIR_DEBUG)/src/socket/Server.o $(OBJDIR_DEBUG)/src/socket/UnixServer.o

.ONESHELL:
osrm_debug:
	test -d $(OSRM_OUT_DIR_DEBUG) || mkdir -p $(OSRM_OUT_DIR_DEBUG)
	(cd $(OSRM_OUT_DIR_DEBUG) ; cmake ../.. -DCMAKE_BUILD_TYPE=Debug ; make $(JOB_FLAG))

.ONESHELL:
osrm_release:
	test -d $(OSRM_OUT_DIR_RELEASE) || mkdir -p $(OSRM_OUT_DIR_RELEASE)
	(cd $(OSRM_OUT_DIR_RELEASE) ; cmake ../.. -DCMAKE_BUILD_TYPE=Release ; make $(JOB_FLAG))

all: release

clean: cleanrelease

before_release:
	test -d bin/release || mkdir -p bin/release
	test -d $(OBJDIR_RELEASE)/src || mkdir -p $(OBJDIR_RELEASE)/src
	test -d $(OBJDIR_RELEASE)/src/ini-reader || mkdir -p $(OBJDIR_RELEASE)/src/ini-reader
	test -d $(OBJDIR_RELEASE)/src/logger || mkdir -p $(OBJDIR_RELEASE)/src/logger
	test -d $(OBJDIR_RELEASE)/src/socket || mkdir -p $(OBJDIR_RELEASE)/src/socket

after_release:

release: before_release osrm_release out_release after_release

out_release: before_release osrm_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE)  $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/src/WorkerQueue.o: src/WorkerQueue.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src/WorkerQueue.cpp -o $(OBJDIR_RELEASE)/src/WorkerQueue.o

$(OBJDIR_RELEASE)/src/ini-reader/INIReader.o: src/ini-reader/INIReader.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src/ini-reader/INIReader.cpp -o $(OBJDIR_RELEASE)/src/ini-reader/INIReader.o

$(OBJDIR_RELEASE)/src/ini-reader/ini.o: src/ini-reader/ini.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src/ini-reader/ini.c -o $(OBJDIR_RELEASE)/src/ini-reader/ini.o

$(OBJDIR_RELEASE)/src/logger/log.o: src/logger/log.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src/logger/log.cpp -o $(OBJDIR_RELEASE)/src/logger/log.o

$(OBJDIR_RELEASE)/src/osrmd.o: src/osrmd.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src/osrmd.cpp -o $(OBJDIR_RELEASE)/src/osrmd.o

$(OBJDIR_RELEASE)/src/socket/Server.o: src/socket/Server.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src/socket/Server.cpp -o $(OBJDIR_RELEASE)/src/socket/Server.o

$(OBJDIR_RELEASE)/src/socket/UnixServer.o: src/socket/UnixServer.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src/socket/UnixServer.cpp -o $(OBJDIR_RELEASE)/src/socket/UnixServer.o

cleanrelease:
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf $(OUT_RELEASE)
	rm -rf $(OBJDIR_RELEASE)/src
	rm -rf $(OBJDIR_RELEASE)/src/ini-reader
	rm -rf $(OBJDIR_RELEASE)/src/logger
	rm -rf $(OBJDIR_RELEASE)/src/socket
	rm -rf $(OSRM_OUT_DIR_RELEASE)

before_debug:
	test -d bin/debug || mkdir -p bin/debug
	test -d $(OBJDIR_DEBUG)/src || mkdir -p $(OBJDIR_DEBUG)/src
	test -d $(OBJDIR_DEBUG)/src/ini-reader || mkdir -p $(OBJDIR_DEBUG)/src/ini-reader
	test -d $(OBJDIR_DEBUG)/src/logger || mkdir -p $(OBJDIR_DEBUG)/src/logger
	test -d $(OBJDIR_DEBUG)/src/socket || mkdir -p $(OBJDIR_DEBUG)/src/socket

after_debug:

debug: before_debug osrm_debug out_debug after_debug

out_debug: before_debug osrm_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) $(LIBDIR_DEBUG) -o $(OUT_DEBUG) $(OBJ_DEBUG)  $(LDFLAGS_DEBUG) $(LIB_DEBUG)

$(OBJDIR_DEBUG)/src/WorkerQueue.o: src/WorkerQueue.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src/WorkerQueue.cpp -o $(OBJDIR_DEBUG)/src/WorkerQueue.o

$(OBJDIR_DEBUG)/src/ini-reader/INIReader.o: src/ini-reader/INIReader.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src/ini-reader/INIReader.cpp -o $(OBJDIR_DEBUG)/src/ini-reader/INIReader.o

$(OBJDIR_DEBUG)/src/ini-reader/ini.o: src/ini-reader/ini.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src/ini-reader/ini.c -o $(OBJDIR_DEBUG)/src/ini-reader/ini.o

$(OBJDIR_DEBUG)/src/logger/log.o: src/logger/log.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src/logger/log.cpp -o $(OBJDIR_DEBUG)/src/logger/log.o

$(OBJDIR_DEBUG)/src/osrmd.o: src/osrmd.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src/osrmd.cpp -o $(OBJDIR_DEBUG)/src/osrmd.o

$(OBJDIR_DEBUG)/src/socket/Server.o: src/socket/Server.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src/socket/Server.cpp -o $(OBJDIR_DEBUG)/src/socket/Server.o

$(OBJDIR_DEBUG)/src/socket/UnixServer.o: src/socket/UnixServer.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src/socket/UnixServer.cpp -o $(OBJDIR_DEBUG)/src/socket/UnixServer.o

cleandebug:
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf $(OUT_DEBUG)
	rm -rf $(OBJDIR_DEBUG)/src
	rm -rf $(OBJDIR_DEBUG)/src/ini-reader
	rm -rf $(OBJDIR_DEBUG)/src/logger
	rm -rf $(OBJDIR_DEBUG)/src/socket
	rm -rf $(OSRM_OUT_DIR_DEBUG)

.PHONY: before_release after_release clean_release before_debug after_debug clean_debug

install_debug:
	(cd $(OSRM_OUT_DIR_DEBUG) ; make install)
	cp $(OUT_DEBUG) $(INSTALL_DIR_BIN)
	chmod 766 $(INSTALL_DIR_BIN)/osrmd
	test -d $(INSTALL_DIR_CONF) || mkdir $(INSTALL_DIR_CONF)
	cp ini/osrmd.ini $(INSTALL_DIR_CONF)/osrmd.ini
	test -d $(INSTALL_DIR_LOG) || mkdir $(INSTALL_DIR_LOG)
	cp sh/keepalive-osrmd $(INSTALL_DIR_SCRIPTS)/keepalive-osrmd
	chmod 766 $(INSTALL_DIR_SCRIPTS)/keepalive-osrmd
	cp sh/osrmd /etc/init.d/osrmd
	chmod 766 /etc/init.d/osrmd
	update-rc.d osrmd defaults

install_release:
	(cd $(OSRM_OUT_DIR_RELEASE) ; make install)
	cp $(OUT_RELEASE) $(INSTALL_DIR_BIN)
	chmod 766 $(INSTALL_DIR_BIN)/osrmd
	test -d $(INSTALL_DIR_CONF) || mkdir $(INSTALL_DIR_CONF)
	cp ini/osrmd.ini $(INSTALL_DIR_CONF)/osrmd.ini
	test -d $(INSTALL_DIR_LOG) || mkdir $(INSTALL_DIR_LOG)
	cp sh/keepalive-osrmd $(INSTALL_DIR_SCRIPTS)/keepalive-osrmd
	chmod 766 $(INSTALL_DIR_SCRIPTS)/keepalive-osrmd
	cp sh/osrmd /etc/init.d/osrmd
	chmod 766 /etc/init.d/osrmd
	update-rc.d osrmd defaults

install: install_release

